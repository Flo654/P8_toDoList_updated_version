<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="TaskVoter.php" path="\Security\Voter">
    <totals>
      <lines total="51" comments="4" code="47" executable="18" executed="16" percent="88.89"/>
      <methods count="2" tested="1" percent="50.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Security\Voter\TaskVoter" start="9" executable="18" executed="16" crap="13.23">
      <namespace name="App\Security\Voter"/>
      <method name="supports" signature="supports($attribute, $subject): bool" start="11" end="17" crap="2" executable="2" executed="2" coverage="100"/>
      <method name="voteOnAttribute" signature="voteOnAttribute($attribute, $subject, Symfony\Component\Security\Core\Authentication\Token\TokenInterface $token): bool" start="19" end="50" crap="11.24" executable="16" executed="14" coverage="87.5"/>
    </class>
    <coverage>
      <line nr="15">
        <covered by="App\Tests\Controller\DefaultControllerTest::testIndexRedirectionOk"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testRedirectionLogout"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testResponseEditTaskIfNotTheOwner"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testResponseEditTaskIfAdminOrOwner"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testEditTaskIsSuccessful"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testdeletingNoAuthorTaskWhenAdmin"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreateUserPageIsUp"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreateUserRedirectionIfConnectedAsUser"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreatingANewUser"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEditUserRedirectionIfNotAdmin"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEditAnUser"/>
      </line>
      <line nr="16">
        <covered by="App\Tests\Controller\DefaultControllerTest::testIndexRedirectionOk"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testRedirectionLogout"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testResponseEditTaskIfNotTheOwner"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testResponseEditTaskIfAdminOrOwner"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testEditTaskIsSuccessful"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testdeletingNoAuthorTaskWhenAdmin"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreateUserPageIsUp"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreateUserRedirectionIfConnectedAsUser"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreatingANewUser"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEditUserRedirectionIfNotAdmin"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEditAnUser"/>
      </line>
      <line nr="21">
        <covered by="App\Tests\Controller\TaskControllerTest::testResponseEditTaskIfNotTheOwner"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testResponseEditTaskIfAdminOrOwner"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testEditTaskIsSuccessful"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testdeletingNoAuthorTaskWhenAdmin"/>
      </line>
      <line nr="23">
        <covered by="App\Tests\Controller\TaskControllerTest::testResponseEditTaskIfNotTheOwner"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testResponseEditTaskIfAdminOrOwner"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testEditTaskIsSuccessful"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testdeletingNoAuthorTaskWhenAdmin"/>
      </line>
      <line nr="24">
        <covered by="App\Tests\Controller\TaskControllerTest::testResponseEditTaskIfNotTheOwner"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testResponseEditTaskIfAdminOrOwner"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testEditTaskIsSuccessful"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testdeletingNoAuthorTaskWhenAdmin"/>
      </line>
      <line nr="25">
        <covered by="App\Tests\Controller\TaskControllerTest::testResponseEditTaskIfNotTheOwner"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testResponseEditTaskIfAdminOrOwner"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testEditTaskIsSuccessful"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testdeletingNoAuthorTaskWhenAdmin"/>
      </line>
      <line nr="31">
        <covered by="App\Tests\Controller\TaskControllerTest::testResponseEditTaskIfNotTheOwner"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testResponseEditTaskIfAdminOrOwner"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testEditTaskIsSuccessful"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testdeletingNoAuthorTaskWhenAdmin"/>
      </line>
      <line nr="36">
        <covered by="App\Tests\Controller\TaskControllerTest::testResponseEditTaskIfNotTheOwner"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testResponseEditTaskIfAdminOrOwner"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testEditTaskIsSuccessful"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testdeletingNoAuthorTaskWhenAdmin"/>
      </line>
      <line nr="37">
        <covered by="App\Tests\Controller\TaskControllerTest::testResponseEditTaskIfNotTheOwner"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testResponseEditTaskIfAdminOrOwner"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testEditTaskIsSuccessful"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testdeletingNoAuthorTaskWhenAdmin"/>
      </line>
      <line nr="38">
        <covered by="App\Tests\Controller\TaskControllerTest::testResponseEditTaskIfNotTheOwner"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testResponseEditTaskIfAdminOrOwner"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testEditTaskIsSuccessful"/>
      </line>
      <line nr="39">
        <covered by="App\Tests\Controller\TaskControllerTest::testResponseEditTaskIfAdminOrOwner"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testEditTaskIsSuccessful"/>
      </line>
      <line nr="41">
        <covered by="App\Tests\Controller\TaskControllerTest::testResponseEditTaskIfNotTheOwner"/>
      </line>
      <line nr="42">
        <covered by="App\Tests\Controller\TaskControllerTest::testdeletingNoAuthorTaskWhenAdmin"/>
      </line>
      <line nr="43">
        <covered by="App\Tests\Controller\TaskControllerTest::testdeletingNoAuthorTaskWhenAdmin"/>
      </line>
      <line nr="44">
        <covered by="App\Tests\Controller\TaskControllerTest::testdeletingNoAuthorTaskWhenAdmin"/>
      </line>
      <line nr="49">
        <covered by="App\Tests\Controller\TaskControllerTest::testResponseEditTaskIfNotTheOwner"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Security</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Voter</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Symfony</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Component</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Security</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Core</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Authentication</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Token</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">TokenInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Symfony</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Component</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Security</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Core</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Authorization</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Voter</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Voter</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Symfony</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Component</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Security</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Core</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">User</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">UserInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8"/>
      <line no="9">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">TaskVoter</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Voter</token>
      </line>
      <line no="10">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="11">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">supports</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$attribute</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$subject</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="12">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="13">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// replace with your own logic</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// https://symfony.com/doc/current/security/voters.html</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$attribute</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'TASK_EDIT'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'TASK_DELETE'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$subject</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INSTANCEOF">instanceof</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Entity</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Task</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="18"/>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">voteOnAttribute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$attribute</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$subject</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">TokenInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$token</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$token</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getUser</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$taskAuthor</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$subject</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getUser</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_EQUAL">!=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'anon.'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$isAdmin</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ROLE_ADMIN'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getRoles</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">       </token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// if the user is anonymous, do not grant access</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">        </token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">   </token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INSTANCEOF">instanceof</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UserInterface</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="34"/>
      <line no="35">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// ... (check conditions and return true to grant permission) ...</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">        </token>
        <token name="T_SWITCH">switch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$attribute</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'TASK_EDIT'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$taskAuthor</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isAdmin</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$taskAuthor</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">                </token>
        <token name="T_BREAK">break</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'TASK_DELETE'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$taskAuthor</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isAdmin</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$taskAuthor</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">                </token>
        <token name="T_BREAK">break</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="48"/>
      <line no="49">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="51">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="52"/>
    </source>
  </file>
</phpunit>
